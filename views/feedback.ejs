<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <h1>Kennett Square Library Makerspace</h1>
        <h2><%= title %></h2>
    </header>

    <main>
        <section class="feedback-form">
            <h3>Submit Your Satisfaction</h3>
            <form action="/feedback/submit" method="POST">
                <div>
    <label for="level">Satisfaction Level:</label>
        <div class="satisfaction-slider-container">
            <div class="slider-icons">
                <span>😟</span>
                <span>😕</span>
                <span>😐</span>
                <span>🙂</span>
                <span>😁</span>
            </div>
            <input type="range" id="level" name="level" min="1" max="5" value="3" required>
        <div class="slider-labels">
            <span>Very dissatisfied</span>
            <span>Dissatisfied</span>
            <span>Neutral</span>
            <span>Satisfied</span>
            <span>Very satisfied</span>
        </div>
        <div class="slider-value-display">
            <span id="selected-emoji">😐</span>
            <span id="selected-text">Neutral</span>
        </div>
    </div>
</div>
                <div>
                    <label for="comment">Comments (Optional):</label>
                    <textarea id="comment" name="comment" rows="4"></textarea>
                </div>
                <button type="submit">Submit Feedback</button>
            </form>
        </section>

                <%
        const satisfactionMap = {
            '1': { text: 'Very dissatisfied', emoji: '😟' },
            '2': { text: 'Dissatisfied', emoji: '😕' },
            '3': { text: 'Neutral', emoji: '😐' },
            '4': { text: 'Satisfied', emoji: '🙂' },
            '5': { text: 'Very satisfied', emoji: '😁' }
        };
        %>

        <section class="recent-feedback">
            <h3>Recent Feedback</h3>
            <% if (feedbackEntries.length > 0) { %>
                <ul>
                    <% feedbackEntries.forEach(entry => { %>
                        <li>
                            <strong>
                                <%= satisfactionMap[entry.level].emoji %> 
                                <%= satisfactionMap[entry.level].text %>
                            </strong>
                            
                            <% if (entry.comment) { %>
                                <p>Comment: <%= entry.comment %></p>
                            <% } %>
                            <small>Submitted: <%= entry.submittedAt.toLocaleDateString() %></small>
                        </li>
                    <% }); %>
                </ul>
            <% } %>
        </section>
    </main>

    <footer>
        <p>&copy; <%= new Date().getFullYear() %> Kennett Square Library</p>
    </footer>
    <script>
    const slider = document.getElementById('level');
    const selectedEmoji = document.getElementById('selected-emoji');
    const selectedText = document.getElementById('selected-text');
    const sliderIcons = document.querySelectorAll('.slider-icons span');

    // This map links the slider's numeric value to an emoji, text, and index
    const satisfactionMap = {
        '1': { emoji: '😟', text: 'Very dissatisfied', index: 0 },
        '2': { emoji: '😕', text: 'Dissatisfied', index: 1 },
        '3': { emoji: '😐', text: 'Neutral', index: 2 },
        '4': { emoji: '🙂', text: 'Satisfied', index: 3 },
        '5': { emoji: '😁', text: 'Very satisfied', index: 4 }
    };

    // Function to update the display
    function updateSliderDisplay(value) {
        // Update the big emoji and text display
        selectedEmoji.textContent = satisfactionMap[value].emoji;
        selectedText.textContent = satisfactionMap[value].text;
        
        // Update the active icon above the slider
        const activeIndex = satisfactionMap[value].index;
        sliderIcons.forEach((icon, index) => {
            if (index === activeIndex) {
                icon.classList.add('active');
            } else {
                icon.classList.remove('active');
            }
        });
    }

    // Listen for the slider to be moved
    slider.addEventListener('input', () => {
        updateSliderDisplay(slider.value);
    });

    // Set the initial state when the page loads
    updateSliderDisplay(slider.value);
</script>
</body>
</html>